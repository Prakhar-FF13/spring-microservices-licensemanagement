version: "3.7"

services:
  licensing-service:
    build:
      context: ./licensing-service
      dockerfile: Dockerfile
    environment:
      PROFILE: "dev"
      CONFIGHOST: http://configserver:8071
      # SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071"
      # CONFIGSERVER_URI: "http://configserver:8071"
      # CONFIGSERVER_PORT: "8071"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY: "IMSYMMETRIC"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - backend

  configserver:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8071:8071"
    environment:
      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
    networks:
      backend:
        aliases:
          - "configserver"

  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "ostock_dev"
    # volumes:
    #   - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
    #   - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  eureka-server:
    build:
      context: ./eurekaserver
      dockerfile: Dockerfile
    ports:
      - "8070:8070"
    environment:
      PROFILE: "dev"
      CONFIGHOST: http://configserver:8071
      # SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071"
      # CONFIGSERVER_URI: "http://configserver:8071"
      # CONFIGSERVER_PORT: "8071"
      DATABASESERVER_PORT: "5432"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eurekaserver"

  organizationservice:
    build:
      context: ./organization-service
      dockerfile: Dockerfile
    environment:
      PROFILE: "dev"
      CONFIGHOST: http://configserver:8071
      # SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071"
      # CONFIGSERVER_URI: "http://configserver:8071"
      # CONFIGSERVER_PORT: "8071"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY: "IMSYMMETRIC"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    ports:
      - "8081:8081"
    networks:
      - backend

networks:
  backend:
    driver: bridge
